root: true
env:
  es6: true
  node: true
extends:
  - 'eslint:recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
  - 'plugin:import/errors'
  - 'plugin:import/warnings'
  - 'plugin:import/typescript'
  - 'plugin:promise/recommended'
  - 'plugin:unicorn/recommended'
  - 'plugin:prettier/recommended'
globals:
  Atomics: readonly
  SharedArrayBuffer: readonly
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 2018
  project:
    - ./tsconfig.json
    - ./tsconfig.spec.json
  sourceType: 'module'
plugins:
  - '@typescript-eslint'
  - 'import'
  - 'promise'
  - 'unicorn'
rules:
  # Prettier - using 'warn' reduces the number of visible errors. Formatter runs before each commit.
  'prettier/prettier': 'warn'
  # TypeScript - strict ruleset is generally favorable as it tends to promote best practices.
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/explicit-member-accessibility': off
  '@typescript-eslint/no-explicit-any': warn
  '@typescript-eslint/no-unsafe-assignment': off
  '@typescript-eslint/no-unsafe-call': off
  '@typescript-eslint/no-unsafe-member-access': off
  '@typescript-eslint/no-unused-vars':
    - 'warn'
    - args: 'none'
  # Unicorn
  'unicorn/no-for-loop': off
  'unicorn/no-process-exit': off
  'unicorn/prefer-node-protocol': off
  'unicorn/prevent-abbreviations': off
